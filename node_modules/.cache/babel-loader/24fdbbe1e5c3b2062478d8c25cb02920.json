{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shobhit Singh\\\\OneDrive\\\\Desktop\\\\quiz-app-master\\\\src\\\\components\\\\Result\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Menu } from 'semantic-ui-react';\nimport Stats from './Stats';\nimport QNA from './QNA';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Result = ({\n  totalQuestions,\n  correctAnswers,\n  timeTaken,\n  questionsAndAnswers,\n  replayQuiz,\n  resetQuiz\n}) => {\n  _s();\n\n  const [activeTab, setActiveTab] = useState('Stats');\n\n  const handleTabClick = (e, {\n    name\n  }) => {\n    setActiveTab(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      fluid: true,\n      widths: 2,\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        name: \"Stats\",\n        active: activeTab === 'Stats',\n        onClick: handleTabClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        name: \"QNA\",\n        active: activeTab === 'QNA',\n        onClick: handleTabClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), activeTab === 'Stats' && /*#__PURE__*/_jsxDEV(Stats, {\n      totalQuestions: totalQuestions,\n      correctAnswers: correctAnswers,\n      timeTaken: timeTaken,\n      replayQuiz: replayQuiz,\n      resetQuiz: resetQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), activeTab === 'QNA' && /*#__PURE__*/_jsxDEV(QNA, {\n      questionsAndAnswers: questionsAndAnswers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Result, \"VYyJ7v14ckwW3+SzG7l4P3Zfb+A=\");\n\n_c = Result;\nResult.propTypes = {\n  totalQuestions: PropTypes.number.isRequired,\n  correctAnswers: PropTypes.number.isRequired,\n  timeTaken: PropTypes.number.isRequired,\n  questionsAndAnswers: PropTypes.array.isRequired,\n  replayQuiz: PropTypes.func.isRequired,\n  resetQuiz: PropTypes.func.isRequired\n};\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["C:/Users/Shobhit Singh/OneDrive/Desktop/quiz-app-master/src/components/Result/index.js"],"names":["React","useState","PropTypes","Container","Menu","Stats","QNA","Result","totalQuestions","correctAnswers","timeTaken","questionsAndAnswers","replayQuiz","resetQuiz","activeTab","setActiveTab","handleTabClick","e","name","propTypes","number","isRequired","array","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,mBAAhC;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,cADc;AAEdC,EAAAA,cAFc;AAGdC,EAAAA,SAHc;AAIdC,EAAAA,mBAJc;AAKdC,EAAAA,UALc;AAMdC,EAAAA;AANc,CAAD,KAOT;AAAA;;AACJ,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,OAAD,CAA1C;;AAEA,QAAMe,cAAc,GAAG,CAACC,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAiB;AACtCH,IAAAA,YAAY,CAACG,IAAD,CAAZ;AACD,GAFD;;AAIA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAY,MAAA,MAAM,EAAE,CAApB;AAAA,8BACE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,MAAM,EAAEJ,SAAS,KAAK,OAFxB;AAGE,QAAA,OAAO,EAAEE;AAHX;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,IAAI,EAAC,KADP;AAEE,QAAA,MAAM,EAAEF,SAAS,KAAK,KAFxB;AAGE,QAAA,OAAO,EAAEE;AAHX;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGF,SAAS,KAAK,OAAd,iBACC,QAAC,KAAD;AACE,MAAA,cAAc,EAAEN,cADlB;AAEE,MAAA,cAAc,EAAEC,cAFlB;AAGE,MAAA,SAAS,EAAEC,SAHb;AAIE,MAAA,UAAU,EAAEE,UAJd;AAKE,MAAA,SAAS,EAAEC;AALb;AAAA;AAAA;AAAA;AAAA,YAdJ,EAsBGC,SAAS,KAAK,KAAd,iBAAuB,QAAC,GAAD;AAAK,MAAA,mBAAmB,EAAEH;AAA1B;AAAA;AAAA;AAAA;AAAA,YAtB1B,eAuBE;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAzCD;;GAAMJ,M;;KAAAA,M;AA2CNA,MAAM,CAACY,SAAP,GAAmB;AACjBX,EAAAA,cAAc,EAAEN,SAAS,CAACkB,MAAV,CAAiBC,UADhB;AAEjBZ,EAAAA,cAAc,EAAEP,SAAS,CAACkB,MAAV,CAAiBC,UAFhB;AAGjBX,EAAAA,SAAS,EAAER,SAAS,CAACkB,MAAV,CAAiBC,UAHX;AAIjBV,EAAAA,mBAAmB,EAAET,SAAS,CAACoB,KAAV,CAAgBD,UAJpB;AAKjBT,EAAAA,UAAU,EAAEV,SAAS,CAACqB,IAAV,CAAeF,UALV;AAMjBR,EAAAA,SAAS,EAAEX,SAAS,CAACqB,IAAV,CAAeF;AANT,CAAnB;AASA,eAAed,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Menu } from 'semantic-ui-react';\n\nimport Stats from './Stats';\nimport QNA from './QNA';\n\nconst Result = ({\n  totalQuestions,\n  correctAnswers,\n  timeTaken,\n  questionsAndAnswers,\n  replayQuiz,\n  resetQuiz\n}) => {\n  const [activeTab, setActiveTab] = useState('Stats');\n\n  const handleTabClick = (e, { name }) => {\n    setActiveTab(name);\n  };\n\n  return (\n    <Container>\n      <Menu fluid widths={2}>\n        <Menu.Item\n          name=\"Stats\"\n          active={activeTab === 'Stats'}\n          onClick={handleTabClick}\n        />\n        <Menu.Item\n          name=\"QNA\"\n          active={activeTab === 'QNA'}\n          onClick={handleTabClick}\n        />\n      </Menu>\n      {activeTab === 'Stats' && (\n        <Stats\n          totalQuestions={totalQuestions}\n          correctAnswers={correctAnswers}\n          timeTaken={timeTaken}\n          replayQuiz={replayQuiz}\n          resetQuiz={resetQuiz}\n        />\n      )}\n      {activeTab === 'QNA' && <QNA questionsAndAnswers={questionsAndAnswers} />}\n      <br />\n    </Container>\n  );\n};\n\nResult.propTypes = {\n  totalQuestions: PropTypes.number.isRequired,\n  correctAnswers: PropTypes.number.isRequired,\n  timeTaken: PropTypes.number.isRequired,\n  questionsAndAnswers: PropTypes.array.isRequired,\n  replayQuiz: PropTypes.func.isRequired,\n  resetQuiz: PropTypes.func.isRequired\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}