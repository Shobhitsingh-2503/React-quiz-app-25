{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shobhit Singh\\\\OneDrive\\\\Desktop\\\\quiz app\\\\src\\\\components\\\\Quiz\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Segment, Item, Divider, Button, Icon, Message, Menu, Header } from 'semantic-ui-react';\nimport he from 'he';\nimport Countdown from '../Countdown';\nimport { getLetter } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = ({\n  data,\n  countdownTime,\n  endQuiz\n}) => {\n  _s();\n\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [userSlectedAns, setUserSlectedAns] = useState(null);\n  const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n  const [timeTaken, setTimeTaken] = useState(null);\n\n  const handleItemClick = (e, {\n    name\n  }) => {\n    setUserSlectedAns(name);\n  };\n\n  const handleNext = () => {\n    let point = 0;\n\n    if (userSlectedAns === he.decode(data[questionIndex].correct_answer)) {\n      point = 1;\n    }\n\n    const qna = questionsAndAnswers;\n    qna.push({\n      question: he.decode(data[questionIndex].question),\n      user_answer: userSlectedAns,\n      correct_answer: he.decode(data[questionIndex].correct_answer),\n      point\n    });\n\n    if (questionIndex === data.length - 1) {\n      return endQuiz({\n        totalQuestions: data.length,\n        correctAnswers: correctAnswers + point,\n        timeTaken,\n        questionsAndAnswers: qna\n      });\n    }\n\n    setCorrectAnswers(correctAnswers + point);\n    setQuestionIndex(questionIndex + 1);\n    setUserSlectedAns(null);\n    setQuestionsAndAnswers(qna);\n  };\n\n  const timeOver = timeTaken => {\n    return endQuiz({\n      totalQuestions: data.length,\n      correctAnswers,\n      timeTaken,\n      questionsAndAnswers\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Item.Header, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Segment, {\n        children: /*#__PURE__*/_jsxDEV(Item.Group, {\n          divided: true,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(Item.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Item.Extra, {\n                children: [/*#__PURE__*/_jsxDEV(Header, {\n                  as: \"h1\",\n                  block: true,\n                  floated: \"left\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"info circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n                    children: `Question No.${questionIndex + 1} of ${data.length}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n                  countdownTime: countdownTime,\n                  timeOver: timeOver,\n                  setTimeTaken: setTimeTaken\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Item.Meta, {\n                children: [/*#__PURE__*/_jsxDEV(Message, {\n                  size: \"huge\",\n                  floating: true,\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: `Q. ${he.decode(data[questionIndex].question)}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Item.Description, {\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Please choose one of the following answers:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Menu, {\n                  vertical: true,\n                  fluid: true,\n                  size: \"massive\",\n                  children: data[questionIndex].options.map((option, i) => {\n                    const letter = getLetter(i);\n                    const decodedOption = he.decode(option);\n                    return /*#__PURE__*/_jsxDEV(Menu.Item, {\n                      name: decodedOption,\n                      active: userSlectedAns === decodedOption,\n                      onClick: handleItemClick,\n                      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                        style: {\n                          marginRight: '8px'\n                        },\n                        children: letter\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 111,\n                        columnNumber: 27\n                      }, this), decodedOption]\n                    }, decodedOption, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 25\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Item.Extra, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  primary: true,\n                  content: \"Next\",\n                  onClick: handleNext,\n                  floated: \"right\",\n                  size: \"big\",\n                  icon: \"right chevron\",\n                  labelPosition: \"right\",\n                  disabled: !userSlectedAns\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quiz, \"B4xJvZQFJhRKJFpGOnv4dGhYWH8=\");\n\n_c = Quiz;\nQuiz.propTypes = {\n  data: PropTypes.array.isRequired,\n  countdownTime: PropTypes.number.isRequired,\n  endQuiz: PropTypes.func.isRequired\n};\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/Shobhit Singh/OneDrive/Desktop/quiz app/src/components/Quiz/index.js"],"names":["React","useState","PropTypes","Container","Segment","Item","Divider","Button","Icon","Message","Menu","Header","he","Countdown","getLetter","Quiz","data","countdownTime","endQuiz","questionIndex","setQuestionIndex","correctAnswers","setCorrectAnswers","userSlectedAns","setUserSlectedAns","questionsAndAnswers","setQuestionsAndAnswers","timeTaken","setTimeTaken","handleItemClick","e","name","handleNext","point","decode","correct_answer","qna","push","question","user_answer","length","totalQuestions","timeOver","options","map","option","i","letter","decodedOption","marginRight","propTypes","array","isRequired","number","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  Segment,\n  Item,\n  Divider,\n  Button,\n  Icon,\n  Message,\n  Menu,\n  Header\n} from 'semantic-ui-react';\nimport he from 'he';\n\nimport Countdown from '../Countdown';\nimport { getLetter } from '../../utils';\n\nconst Quiz = ({ data, countdownTime, endQuiz }) => {\n\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [userSlectedAns, setUserSlectedAns] = useState(null);\n  const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n  const [timeTaken, setTimeTaken] = useState(null);\n\n  const handleItemClick = (e, { name }) => {\n    setUserSlectedAns(name);\n  };\n\n  const handleNext = () => {\n    let point = 0;\n    if (userSlectedAns === he.decode(data[questionIndex].correct_answer)) {\n      point = 1;\n    }\n\n    const qna = questionsAndAnswers;\n    qna.push({\n      question: he.decode(data[questionIndex].question),\n      user_answer: userSlectedAns,\n      correct_answer: he.decode(data[questionIndex].correct_answer),\n      point\n    });\n\n    if (questionIndex === data.length - 1) {\n      return endQuiz({\n        totalQuestions: data.length,\n        correctAnswers: correctAnswers + point,\n        timeTaken,\n        questionsAndAnswers: qna\n      });\n    }\n\n    setCorrectAnswers(correctAnswers + point);\n    setQuestionIndex(questionIndex + 1);\n    setUserSlectedAns(null);\n    setQuestionsAndAnswers(qna);\n  };\n\n  const timeOver = timeTaken => {\n    return endQuiz({\n      totalQuestions: data.length,\n      correctAnswers,\n      timeTaken,\n      questionsAndAnswers\n    });\n  };\n\n  return (\n    <Item.Header>\n      <Container>\n        <Segment>\n          <Item.Group divided>\n            <Item>\n              <Item.Content>\n                <Item.Extra>\n                  <Header as=\"h1\" block floated=\"left\">\n                    <Icon name=\"info circle\" />\n                    <Header.Content>\n                      {`Question No.${questionIndex + 1} of ${data.length}`}\n                    </Header.Content>\n                  </Header>\n                  <Countdown\n                    countdownTime={countdownTime}\n                    timeOver={timeOver}\n                    setTimeTaken={setTimeTaken}\n                  />\n                </Item.Extra>\n                <br />\n                <Item.Meta>\n                  <Message size=\"huge\" floating>\n                    <b>{`Q. ${he.decode(data[questionIndex].question)}`}</b>\n                  </Message>\n                  <br />\n                  <Item.Description>\n                    <h3>Please choose one of the following answers:</h3>\n                  </Item.Description>\n                  <Divider />\n                  <Menu vertical fluid size=\"massive\">\n                    {data[questionIndex].options.map((option, i) => {\n                      const letter = getLetter(i);\n                      const decodedOption = he.decode(option);\n\n                      return (\n                        <Menu.Item\n                          key={decodedOption}\n                          name={decodedOption}\n                          active={userSlectedAns === decodedOption}\n                          onClick={handleItemClick}\n                        >\n                          <b style={{ marginRight: '8px' }}>{letter}</b>\n                          {decodedOption}\n                        </Menu.Item>\n                      );\n                    })}\n                  </Menu>\n                </Item.Meta>\n                <Divider />\n                <Item.Extra>\n                  <Button\n                    primary\n                    content=\"Next\"\n                    onClick={handleNext}\n                    floated=\"right\"\n                    size=\"big\"\n                    icon=\"right chevron\"\n                    labelPosition=\"right\"\n                    disabled={!userSlectedAns}\n                  />\n                </Item.Extra>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n        <br />\n      </Container>\n    </Item.Header>\n  );\n};\n\nQuiz.propTypes = {\n  data: PropTypes.array.isRequired,\n  countdownTime: PropTypes.number.isRequired,\n  endQuiz: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}