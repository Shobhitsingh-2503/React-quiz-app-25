{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shobhit Singh\\\\OneDrive\\\\Desktop\\\\quiz-app-master\\\\src\\\\components\\\\Result\\\\Stats.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Header, Button } from 'semantic-ui-react';\nimport ShareButton from '../ShareButton';\nimport { calculateScore, calculateGrade, timeConverter } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stats = ({\n  totalQuestions,\n  correctAnswers,\n  timeTaken,\n  replayQuiz,\n  resetQuiz\n}) => {\n  const score = calculateScore(totalQuestions, correctAnswers);\n  const {\n    grade,\n    remarks\n  } = calculateGrade(score);\n  const {\n    hours,\n    minutes,\n    seconds\n  } = timeConverter(timeTaken);\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h1\",\n      textAlign: \"center\",\n      block: true,\n      children: remarks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      textAlign: \"center\",\n      block: true,\n      children: [\"Grade: \", grade]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h3\",\n      textAlign: \"center\",\n      block: true,\n      children: [\"Total Questions: \", totalQuestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h3\",\n      textAlign: \"center\",\n      block: true,\n      children: [\"Correct Answers: \", correctAnswers]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h3\",\n      textAlign: \"center\",\n      block: true,\n      children: [\"Your Score: \", score, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h3\",\n      textAlign: \"center\",\n      block: true,\n      children: \"Passing Score: 60%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h3\",\n      textAlign: \"center\",\n      block: true,\n      children: [\"Time Taken:\", ' ', `${Number(hours)}h ${Number(minutes)}m ${Number(seconds)}s`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 35\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        content: \"Play Again\",\n        onClick: replayQuiz,\n        size: \"big\",\n        icon: \"redo\",\n        labelPosition: \"left\",\n        style: {\n          marginRight: 15,\n          marginBottom: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"teal\",\n        content: \"Back to Home\",\n        onClick: resetQuiz,\n        size: \"big\",\n        icon: \"home\",\n        labelPosition: \"left\",\n        style: {\n          marginBottom: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ShareButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Stats;\nStats.propTypes = {\n  totalQuestions: PropTypes.number.isRequired,\n  correctAnswers: PropTypes.number.isRequired,\n  timeTaken: PropTypes.number.isRequired,\n  replayQuiz: PropTypes.func.isRequired,\n  resetQuiz: PropTypes.func.isRequired\n};\nexport default Stats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"sources":["C:/Users/Shobhit Singh/OneDrive/Desktop/quiz-app-master/src/components/Result/Stats.js"],"names":["React","PropTypes","Segment","Header","Button","ShareButton","calculateScore","calculateGrade","timeConverter","Stats","totalQuestions","correctAnswers","timeTaken","replayQuiz","resetQuiz","score","grade","remarks","hours","minutes","seconds","Number","marginTop","marginRight","marginBottom","propTypes","number","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Header, Button } from 'semantic-ui-react';\n\nimport ShareButton from '../ShareButton';\nimport { calculateScore, calculateGrade, timeConverter } from '../../utils';\n\nconst Stats = ({\n  totalQuestions,\n  correctAnswers,\n  timeTaken,\n  replayQuiz,\n  resetQuiz\n}) => {\n  const score = calculateScore(totalQuestions, correctAnswers);\n  const { grade, remarks } = calculateGrade(score);\n  const { hours, minutes, seconds } = timeConverter(timeTaken);\n\n  return (\n    <Segment>\n      <Header as=\"h1\" textAlign=\"center\" block>\n        {remarks}\n      </Header>\n      <Header as=\"h2\" textAlign=\"center\" block>\n        Grade: {grade}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Total Questions: {totalQuestions}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Correct Answers: {correctAnswers}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Your Score: {score}%\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Passing Score: 60%\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Time Taken:{' '}\n        {`${Number(hours)}h ${Number(minutes)}m ${Number(seconds)}s`}\n      </Header>\n      <div style={{ marginTop: 35 }}>\n        <Button\n          primary\n          content=\"Play Again\"\n          onClick={replayQuiz}\n          size=\"big\"\n          icon=\"redo\"\n          labelPosition=\"left\"\n          style={{ marginRight: 15, marginBottom: 8 }}\n        />\n        <Button\n          color=\"teal\"\n          content=\"Back to Home\"\n          onClick={resetQuiz}\n          size=\"big\"\n          icon=\"home\"\n          labelPosition=\"left\"\n          style={{ marginBottom: 8 }}\n        />\n        <ShareButton />\n      </div>\n    </Segment>\n  );\n};\n\nStats.propTypes = {\n  totalQuestions: PropTypes.number.isRequired,\n  correctAnswers: PropTypes.number.isRequired,\n  timeTaken: PropTypes.number.isRequired,\n  replayQuiz: PropTypes.func.isRequired,\n  resetQuiz: PropTypes.func.isRequired\n};\n\nexport default Stats;\n"]},"metadata":{},"sourceType":"module"}